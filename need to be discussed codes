### shuen ###
import sys

print("<<< welcome to SOS >>>")

info = input ("Press 0 for guides and press 1 to continue: ")

while not (info == "0" or info == "1"):
    print ("### invalid input ###")
    info = input ("Press 0 to learn how to play else press 1 to continue: ")

if info == "0":
    print (" ")
    print ("<<< guide >>>")
    print ("The goal is to form the word SOS on the grid horizontally/vertically/diagonally.")
    print ("There are two modes.")
    print ("The Ai mode and the 2 player mode.")
    print ("The AI mode only requires one player and 2 player mode requires 2 player.")
    print ("Each player will take turns to fill the grid with either S or O.")
    print ("The player that forms the word SOS will win the game.")
    print ("<<< GOOD LUCK >>>")
    
elif info == "1":
    info = None

print (" ")
print ("<<< players >>>")
play1 = input ("Enter player 1 name: ")
play2 = input ("Enter player 2 name: ")
mode = input ("Press 1 for AI mode and press 2 for 2 player mode: ") 
# we can try to do the mode ltr on but like i just wanna put it here

grid = ["A","B","C","D","E"]

board = [[" ", " ", " ", " ", " "], [" ", " ", " ", " ", " "], [" ", " ", " ", " ", " "], [" ", " ", " ", " ", " "], [" ", " ", " ", " ", " "]]

A = board[0] 
B = board[1] 
C = board[2]
D = board[3]
E = board[4]


sep = "|" 
hline = "\t+---+---+---+---+---+" 

def ttt():
    count = 0
    print("          1   2   3   4   5")
    for row in board:
        print (hline)
        print ("     " + grid[count] + "  " + sep + " " + row[0] + " " + sep + " " + row[1] + " " + sep + " " + row[2] + " " + sep + " " + row[3] + " " + sep + " " + row[4] + " " + sep)
        count += 1
    print (hline)

while not(mode == "1" or mode == "2"):
    print ("### invalid input ###")
    mode = input ("Press 1 for AI mode and press 2 for 2 player mode: ")

if mode == "1":
    ttt()
    print ("AI mode activated")
    print (" ")
elif mode == "2":
    ttt()
    print ("2 player mode activated")
    print (" ")

counter = False

def counter_check():
    for i in range(len(grid)):
        if A[i] == " ":
            counter = False
        elif B[i] == " ":
            counter = False
        elif C[i] == " ":
            counter = False
        elif D[i] == " ":
            counter = False
        elif E[i] == " ":
            counter = False
        else:
            counter = True

counter_check()

plyer = 0

while counter == False:
    if plyer % 2 == 0:
        print ("<<< " + play1 + " >>>")
        plyer += 1
    else:
        print ("<<< " + play2 + " >>>")
        plyer += 1
            
    inpt = input("What would you like to put in (S or O): ")
    inpt = inpt.upper()
    while not (inpt == "S" or inpt == "O"):
        print ("### invalid input ###")
        inpt = input("What would you like to put in (S or O): ")
        inpt = inpt.upper()

    locat = input("Where would you like to place your S/O (eg: A1, B2, C3, D4, E5): ")
    locat = locat.upper()
    while (not (locat[0] == "A" or locat[0] == "B" or locat[0] == "C" or locat[0] == "D" or locat[0] == "E")) or (not (locat[1] == "1" or locat[1] == "2" or locat[1] == "3" or locat[1] == "4" or locat[1] == "5")):
        print ("### invalid input ###")
        locat = input("Where would you like to place your S/O (eg: A1, B2, C3, D4, E5): ")
        locat = locat.upper()
    
    x = None
    for i in range(5):
        x = int(locat[1])
        if locat[0] == "A":
            if x == (1*i)+1:
                if A[i] == " ":
                    A[i] = inpt
                else:
                    print("Spot is already filled")
                    continue
        elif locat[0] == "B":
            if x == (1*i)+1:
                if B[i] == " ":
                    B[i] = inpt
                else:
                    print("Spot is already filled")
                    continue
        elif locat[0] == "C":
            if x == (1*i)+1:
                if C[i] == " ":
                    C[i] = inpt
                else:
                    print("Spot is already filled")
                    continue
        elif locat[0] == "D":
            if x == (1*i)+1:
                if D[i] == " ":
                    D[i] = inpt
                else:
                    print("Spot is already filled")
                    continue
        elif locat[0] == "E":
            if x == (1*i)+1:
                if E[i] == " ":
                    E[i] = inpt
                else:
                    print("Spot is already filled")
                    continue

    counter_check()
    print (" ")            
    ttt()


    if A[0] == "S" and A[1] == "O" and A[2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif A[1] == "S" and A[2] == "O" and A[3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif A[2] == "S" and A[2] == "O" and A[4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif B[0] == "S" and B[1] == "O" and B[2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[1] == "S" and B[2] == "O" and B[3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[2] == "S" and B[3] == "O" and B[4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif C[0] == "S" and C[1] == "O" and C[2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif C[1] == "S" and C[2] == "O" and C[3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif C[2] == "S" and C[3] == "O" and C[4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif D[0] == "S" and D[1] == "O" and D[2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif D[1] == "S" and D[2] == "O" and D[3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif D[2] == "S" and D[3] == "O" and D4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif E[0] == "S" and E[1] == "O" and E[2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif E[1] == "S" and E[2] == "O" and E[3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif E[2] == "S" and E[3] == "O" and E[4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif A[1] == "S" and B[1] == "O" and C[1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[1] == "S" and C[1] == "O" and D[1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif C[1] == "S" and D[1] == "O" and E[1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif A[0] == "S" and B[0] == "O" and C[0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[0] == "S" and C[0] == "O" and D[0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif C[0] == "S" and D[0] == "O" and E[0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[0][2] == "S" and board[1][2] == "O" and board[2][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[1][2] == "S" and board[2][2] == "O" and board[3][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][2] == "S" and board[3][2] == "O" and board[4][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif A[3] == "S" and board[1][3] == "O" and board[2][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[3] == "S" and board[2][3] == "O" and board[3][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif C[3] == "S" and board[3][3] == "O" and board[4][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif A[4] == "S" and board[1][4] == "O" and board[2][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif B[4] == "S" and board[2][4] == "O" and board[3][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][4] == "S" and board[3][4] == "O" and board[4][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[0][0] == "S" and board[1][1] == "O" and board[2][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[0][1] == "S" and board[1][2] == "O" and board[2][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[0][2] == "S" and board[1][3] == "O" and board[2][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[1][0] == "S" and board[2][1] == "O" and board[3][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[1][1] == "S" and board[2][2] == "O" and board[3][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[1][2] == "S" and board[2][3] == "O" and board[3][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[2][1] == "S" and board[3][2] == "O" and board[4][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][1] == "S" and board[3][2] == "O" and board[4][3] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][2] == "S" and board[3][3] == "O" and board[4][4] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[0][4] == "S" and board[1][3] == "O" and board[2][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[0][3] == "S" and board[1][2] == "O" and board[2][1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[0][2] == "S" and board[1][1] == "O" and board[2][0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[1][4] == "S" and board[2][3] == "O" and board[3][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[1][3] == "S" and board[2][2] == "O" and board[3][1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[1][2] == "S" and board[2][1] == "O" and board[3][0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

    elif board[2][4] == "S" and board[3][3] == "O" and board[4][2] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][3] == "S" and board[3][2] == "O" and board[4][1] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()
    elif board[2][2] == "S" and board[3][1] == "O" and board[4][0] == "S":
        print ("^^^ game end ^^^ \n [[[ winner is the last player ]]]")
        sys.exit()

print ("^^^ game end ^^^ \n [[[ no winner ]]]")
sys.exit()

